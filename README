Neil Zimmerman
January 20, 2016

Outline of steps to make a reduced list of commmissioning target candidates:

1. list_builder.py
    This produces one or many target lists, depending on the hard-coded options
    in main. It takes no arguments, but directly reads the selection criteria
    defined in list_specs.py.
    
2. availability_checker.py
   Takes one of the target lists produced by list_builder as a command-line 
   argument.
   Plots the targets on the ecliptic sphere and animates the JWST viewing zone
   over a range of calendar dates. Stores the result as an mpeg or mp4 video.
   Makes a boolean table of availability of each target as a function of
   calendar date, stores as a numpy (.npy) file.
   
3. sort_targets.py
    Takes two command-line arguments: (1) A target list file from list_builder,
    and (2) the daily availibility .npy file from availability_checker.
    Writes tables of reduced subsets of targets meeting various criteria for
    minimum daily availability and ecliptic latitudes. (See header of this
    script for detailed description of the output products.)
    
4. availability_checker.py
    Run availability_checker again, this time with the reduced list from
    sort_targets as a second argument, to generate a new sky plot and viewing
    zone animation for the reduced target subset. The first argument must remain
    the original, full list of target candidates from list_builder.
    
5. write_gallery.py
    Generate an interactive html gallery of sky survey cutout images of each
    target in the reduced subset. The input argument is a list of 2MASS IDs,
    which sort_targets creates automatically for each reduced subset.
